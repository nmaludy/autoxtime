name: compile

on:
  push:
    branches: ['*']
    tags:
      - v*
  pull_request:
    type: [opened, reopened, edited]
  schedule:
    # run every night at midnight
    - cron:  '0 0 * * *'

jobs:
  compile:
    name: 'compile - ${{ matrix.os }} - ${{ matrix.compiler_c }}'
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: windows-latest
            qt_version: '5.12.2'
          - os: ubuntu-latest
            qt_version: '5.12.2'
            apt_packages: >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
            compiler_c: gcc
            compiler_cpp: c++
          - os: ubuntu-latest
            qt_version: '5.12.2'
            apt_packages: >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
            compiler_c: clang
            compiler_cpp: clang++
    env:
      CC: '${{ matrix.compiler_c }}'
      CXX: '${{ matrix.compiler_cpp }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ matrix.qt_version }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          setup-python: '${{ !steps.cache-qt.outputs.cache-hit }}'
          install-deps: '${{ !steps.cache-qt.outputs.cache-hit }}'
      - name: Install packages required for testing
        if: ${{ matrix.apt_packages }}
        run: |
          sudo apt-get -y install ${{ matrix.apt_packages }}
      - name: CMake Setup
        run: |
          cmake -S . -B build
      - name: Compile 
        run: |
          cmake --build build
