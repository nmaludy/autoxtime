name: compile

on:
  push:
    branches: ['*']
    tags:
      - v*
  pull_request:
    type: [opened, reopened, edited]
  schedule:
    # run every night at midnight
    - cron:  '0 0 * * *'

jobs:
  build_external:
    name: 'build external - ${{ matrix.compiler_c }}'
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            compiler_c: gcc
            compiler_cpp: c++
          - os: ubuntu-latest
            compiler_c: clang
            compiler_cpp: clang++
    env:
      CC: '${{ matrix.compiler_c }}'
      CXX: '${{ matrix.compiler_cpp }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        # currently, Qt is not needed to build external dependencies, so don't
        # set it up in this environment, saves time
      - name: Cache External Builds
        id: cache-external
        uses: actions/cache@v2
        with:
          path: |
            build/external
          key: ${{ runner.os }}-external-${{ matrix.compiler_c }}-${{ hashFiles('external/cmake/*.cmake') }}
      - name: CMake Setup External
        run: |
          cmake -S external -B build/external
      - name: Compile External
        run: |
          cmake --build build/external --parallel

  compile:
    name: '${{ matrix.test_type }} - ${{ matrix.test_name_pretty }}'
    needs: build_external
    runs-on: '${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        include:
          - test_type: 'compile'
            test_name_pretty: 'gcc'
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages: >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
            compiler_c: gcc
            compiler_cpp: c++
          - test_type: 'compile'
            test_name_pretty: 'clang'
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages: >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
            compiler_c: clang
            compiler_cpp: clang++
          - test_type: 'static analysis'
            test_name_pretty: "cppcheck"
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages: >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
             cppcheck
            cmake_args: '-DTEST_NAME=cppcheck'
            compiler_c: gcc
            compiler_cpp: g++
          - test_type: 'static analysis'
            test_name_pretty: "clang tidy"
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages:  >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
             clang-tidy
            cmake_args: '-DTEST_NAME=clang-tidy'
            compiler_c: clang
            compiler_cpp: clang++
          - test_type: 'static analysis'
            test_name_pretty: "include what you use"
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages:  >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
             iwyu
            cmake_args: '-DTEST_NAME=include-what-you-use'
            compiler_c: clang
            compiler_cpp: clang++
          - test_type: 'static analysis'
            test_name_pretty: "link what you use"
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages:  >-
             mesa-common-dev libglu1-mesa-dev
             uwsgi uuid-dev libcap-dev libzmq3-dev libpwquality-dev libmemcached-dev libjemalloc-dev
            cmake_args: '-DTEST_NAME=link-what-you-use'
            compiler_c: clang
            compiler_cpp: clang++
          - test_type: 'static analysis'
            test_name_pretty: "clang static analyzer (scan-build)"
            os: ubuntu-latest
            qt_version: '5.15.2'
            apt_packages: 'mesa-common-dev libglu1-mesa-dev clang-tools'
            cmd_prefix: 'scan-build --status-bugs --exclude build/install-prefix'
            compiler_c: clang
            compiler_cpp: clang++
    env:
      CC: '${{ matrix.compiler_c }}'
      CXX: '${{ matrix.compiler_cpp }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          # have to hard code this here because '..' isn't supported in paths
          path: /home/runner/work/autoxtime/Qt
          key: ${{ runner.os }}-QtCache-${{ matrix.qt_version }}
      - name: Cache External Builds
        id: cache-external
        uses: actions/cache@v2
        with:
          path: |
            build/external
          key: ${{ runner.os }}-external-${{ matrix.compiler_c }}-${{ hashFiles('external/cmake/*.cmake') }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          setup-python: '${{ !steps.cache-qt.outputs.cache-hit }}'
          install-deps: '${{ !steps.cache-qt.outputs.cache-hit }}'
      - name: Install packages required for testing
        if: ${{ matrix.apt_packages }}
        run: |
          sudo apt-get -y install ${{ matrix.apt_packages }}
      - name: CMake Setup External
        run: |
          cmake -S external -B build/external
      - name: Compile External
        run: |
          cmake --build build/external --parallel
      - name: CMake Setup
        run: |
          ${{ matrix.cmd_prefix }} cmake -S . -B build ${{ matrix.cmake_args }}
      - name: Compile
        run: |
          ${{ matrix.cmd_prefix }} cmake --build build
